<!DOCTYPE html>

<html>
  <head>
    <title>Chatter</title>
    <link rel="stylesheet" type="text/css" href="/bootstrap/css/bootstrap.css">
    <link rel="stylesheet" type="text/css" href="/chat.css">
    <script type="text/javascript" src="/jquery.js"></script>
    <script type="text/javascript" src="/client.js"></script>
    <script type="text/javascript">

    // A Client takes one argument: a function that is used to process events
    // as they occur.
    var client = new Client(function (event) {
      switch (event.type) {
      case "user-joined":
        userJoined(event.time, event.user);
        break;
      case "user-left":
        userLeft(event.time, event.user);
        break;
      case "new-message":
        receiveMessage(event.time, event.user, event.text);
        break;
      }
    });

    // Sends a new message to all users in the chat.
    function sendMessage(message) {
      client.sendMessage(message);
    }

    // Called when a new message is received.
    function receiveMessage(time, user, text) {
      // Publish the new message to the event stream.
      var html = '<li class="message"><span class="user">' + user + ':</span><span class="text">' + text + '</span></li>';
      $("#events").append(html);
    }

    // Called when a user joins the chat.
    function userJoined(time, user) {
      // Update the user list.
      addUser(user);

      // Announce it in the event stream.
      var html = '<li class="info"><em>' + user + '</em> has joined chatter!</li>';
      $("#events").append(html);
    }

    // Called when a user leaves the chat.
    function userLeft(time, user) {
      // Update the user list.
      removeUser(user);

      // Announce it in the event stream.
      var html = '<li class="info"><em>' + user + '</em> just left chatter.</li>';
      $("#events").append(html);
    }

    var users = [];

    // Returns `true` if the given `user` is in the users array.
    function hasUser(user) {
      return users.indexOf(user) !== -1;
    }

    // Renders the users list.
    function updateUsers() {
      var html = "";

      $.each(users.sort(), function (i, user) {
        html += '<li>' + user + '</li>';
      });

      $("#users").html(html);
    }

    // Adds the given `user` to the list of users.
    function addUser(user) {
      if (!hasUser(user)) {
        users.push(user);
        updateUsers();
      }
    }

    // Removes the given `user` from the list of users.
    function removeUser(user) {
      users = $.grep(users, function (u) {
        return u !== user;
      });

      updateUsers();
    }

    $(function () {

      // Initialize the client. This will make some requests to initialize
      // the page to the current state of the chat.
      client.init(function (users) {
        // There may be some long-time users in the chat that do not appear
        // in recent events. Catch these here and add them to the user list.
        $.each(users, function (i, user) {
          addUser(user);
        });
      });

      // Listen for "Enter" on the #new-message textarea. When it's pressed,
      // send a message to the chat.
      $("#new-message textarea").keyup(function (e) {
        if (e.keyCode === 13) {
          e.preventDefault();
          e.stopPropagation();
          sendMessage($(this).val());
          $(this).val("");
        }
      });

    });

    </script>
  </head>
  <body>
    <div id="right-column">
      <ul id="users"></ul>
    </div>
    <div id="left-column">
      <ol id="events"></ol>
      <div id="new-message">
        <textarea></textarea>
      </div>
    </div>
  </body>
</html>
